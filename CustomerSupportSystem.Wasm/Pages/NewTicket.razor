@page "/tickets/new"
@using CustomerSupportSystem.Domain.Entities
@using CustomerSupportSystem.Wasm.Services
@inject TicketsService TicketsService
@inject NavigationManager Navigation

@code {
    private string title = "";
    private string description = "";
    private TicketPriority priority = TicketPriority.Medium;
    private string category = "General";
    private bool isSubmitting = false;
    private string? errorMessage;
    
    private EditContext? editContext;
    
    protected override void OnInitialized()
    {
        editContext = new EditContext(this);
    }

    private async Task HandleSubmit()
    {
        if (string.IsNullOrWhiteSpace(title) || string.IsNullOrWhiteSpace(description))
        {
            errorMessage = "Please fill in all required fields.";
            return;
        }

        isSubmitting = true;
        errorMessage = null;

        try
        {
            var ticket = new Ticket
            {
                Title = title,
                Description = description,
                Priority = priority,
                Status = TicketStatus.Open,
                CreatedAt = DateTime.UtcNow,
                Customer = new ApplicationUser 
                { 
                    FirstName = "Current", 
                    LastName = "User", 
                    Email = "user@example.com" 
                }
            };

            var createdTicket = await TicketsService.CreateTicketAsync(ticket);
            
            if (createdTicket != null)
            {
                // Navigate to the tickets list
                Navigation.NavigateTo("/tickets");
            }
            else
            {
                errorMessage = "Failed to create ticket. Please try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
        finally
        {
            isSubmitting = false;
        }
    }
}

<PageTitle>New Ticket</PageTitle>

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <h2>Create New Ticket</h2>
            
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger" role="alert">
                    @errorMessage
                </div>
            }

            <div class="card">
                <div class="card-body">
                    <EditForm EditContext="editContext" OnValidSubmit="HandleSubmit">
                        <div class="mb-3">
                            <label for="title" class="form-label">Title *</label>
                            <InputText @bind-Value="title" class="form-control" id="title" placeholder="Enter ticket title" />
                        </div>
                        
                        <div class="mb-3">
                            <label for="description" class="form-label">Description *</label>
                            <InputTextArea @bind-Value="description" class="form-control" id="description" rows="4" placeholder="Describe the issue in detail" />
                        </div>
                        
                        <div class="mb-3">
                            <label for="priority" class="form-label">Priority</label>
                            <InputSelect @bind-Value="priority" class="form-select" id="priority">
                                <option value="@TicketPriority.Low">Low</option>
                                <option value="@TicketPriority.Medium">Medium</option>
                                <option value="@TicketPriority.High">High</option>
                                <option value="@TicketPriority.Critical">Critical</option>
                            </InputSelect>
                        </div>
                        
                        <div class="mb-3">
                            <label for="category" class="form-label">Category</label>
                            <InputSelect @bind-Value="category" class="form-select" id="category">
                                <option value="Technical">Technical</option>
                                <option value="Billing">Billing</option>
                                <option value="General">General</option>
                                <option value="Feature Request">Feature Request</option>
                            </InputSelect>
                        </div>
                        
                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-primary" disabled="@isSubmitting">
                                @if (isSubmitting)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                }
                                else
                                {
                                    <i class="fas fa-plus me-2"></i>
                                }
                                @(isSubmitting ? "Creating..." : "Create Ticket")
                            </button>
                            <a href="/tickets" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Back to Tickets
                            </a>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>
